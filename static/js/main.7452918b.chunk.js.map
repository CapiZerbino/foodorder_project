{"version":3,"sources":["store.js","components/utils/LazyLoad.js","App.js","index.js"],"names":["cartItemsSlice","createSlice","name","initialState","cart","total","discount","reducers","add","state","action","exist","find","x","product","id","payload","newItem","map","qty","quantity","newPrice","reduce","a","c","price","push","remove","undefined","filter","calDiscount","itemsPrice","dis","console","log","type","amount","totalPrice","actions","configureStore","reducer","CircularIndeterminate","Box","sx","display","flexDirection","justifyContent","alignItems","width","height","marginBlock","CircularProgress","Typography","variant","fontWeight","color","Checkout","lazy","Order","App","className","fallback","exact","path","component","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7452918b.chunk.js","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst cartItemsSlice = createSlice({\n    name: \"cartItems\",\n    initialState: {cart: [], total: 0, discount: 0},\n    reducers: {\n        add: (state, action) => {\n            const exist = state.cart.find((x) => x.product.id === action.payload.id);\n            if (exist) {\n                const newItem = state.cart.map((x) =>\n                x.product.id === action.payload.id ? { \n                  ...exist, \n                  qty: exist.qty >= action.payload.quantity ? action.payload.quantity : exist.qty + 1} : x\n              )\n                    const newPrice = newItem.reduce((a, c) => a + c.qty * c.product.price,0);\n                    state.cart = newItem;\n                    state.total = newPrice;\n                    state.discount = newPrice;\n              } else {\n                  const newItem = state.cart;\n                  newItem.push({product: action.payload, qty: 1 });\n                  const newPrice = newItem.reduce((a, c) => a + c.qty * c.product.price,0);\n                  state.cart = newItem;\n                  state.total = newPrice;\n                  state.discount = newPrice;\n            }\n        },\n        remove: (state, action) => {\n            const exist = state.cart.find((x) => x.product.id === action.payload.id);\n            if(exist === undefined){\n            return;\n            } else if (exist.qty === 1) {\n                const newItem = state.cart.filter((x) => x.product.id !== action.payload.id);\n                const newPrice = newItem.reduce((a, c) => a + c.qty * c.product.price,0)\n                state.cart = newItem;\n                state.total = newPrice;\n                state.discount = newPrice;\n            } else { \n                const newItem = state.cart.map((x) =>\n                x.product.id === action.payload.id ? { ...exist, qty: exist.qty - 1 } : x);\n                const newPrice = newItem.reduce((a, c) => a + c.qty * c.product.price,0)\n                state.cart = newItem;\n                state.total = newPrice;\n                state.discount = newPrice;\n            }\n        },\n        calDiscount: (state, action) => {\n            const itemsPrice = state.cart.reduce((a, c) => a + c.qty * c.product.price,0);\n            var dis = 0;\n            console.log(action.payload);\n            if(action.payload.type === \"percentage\"){\n                dis =  (itemsPrice*action.payload.amount)/100;\n                console.log(dis);\n            } else \n            if(action.payload.type === \"amount\" && action.payload.amount <= itemsPrice){\n               \n                dis = action.payload.amount;\n                console.log(dis);\n            } else \n            if(action.payload.type === \"amount\" && action.payload.amount > itemsPrice){\n                dis = itemsPrice - 1;\n                console.log(dis);\n            }\n            const totalPrice = itemsPrice - dis;\n            state.discount = totalPrice;\n            // console.log(action.payload);\n        } \n    }\n})\n\nexport const {add, remove, calDiscount} = cartItemsSlice.actions;\nexport default configureStore({reducer: cartItemsSlice.reducer})","import Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nexport default function CircularIndeterminate() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        marginBlock: 10\n      }}\n    >\n      <CircularProgress />\n      <Typography\n        variant=\"body1\"\n        sx={{\n          fontWeight: \"bold\",\n          color: \"#2E3A55\",\n        }}\n      >\n        Loading...\n      </Typography>\n    </Box>\n  );\n}\n","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CircularIndeterminate from \"./components/utils/LazyLoad\";\nimport \"./styles/style.css\";\nconst Checkout = lazy(() => import(\"./screens/Checkout\"));\nconst Order = lazy(() => import(\"./screens/Order\"));\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Suspense\n          fallback={<CircularIndeterminate/>}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Order}></Route>\n            <Route path=\"/checkout\" component={Checkout}></Route>\n          </Switch>\n          </Router>\n        </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport App from \"./App\";\nimport store from './store';\n\nReactDOM.render(\n  \n  <Provider store={store}>\n    \n    <App />\n  </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}